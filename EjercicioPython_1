{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMB9EsJRDNcr+sR43I2vn7Y"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "nombre=input(\"Nombre:\"+\" \")\n",
        "if nombre in [\"Ana\",\"Juan\",\"Pedro\"]:\n",
        "  print(\"Hola!\")\n",
        "else: print(\"Hola\"+\" \"+ nombre + \"!\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cbuiYXPyUoKO",
        "outputId": "09b1dbe4-1820-44ef-e5b4-9565df72d60f"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Nombre: Ana\n",
            "Hola!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "  n=int(input(\"Ingrese el número de elementos: \"))\n",
        "\n",
        "  listaorig=[]\n",
        "  for i in range(n):\n",
        "    elemento=input(f\"Ingrese el elemento {i + 1}: \")\n",
        "    listaorig.append(elemento)\n",
        "\n",
        "\n",
        "  listainvertida = listaorig[::-1]\n",
        "\n",
        "  print(\"\\nLista invertida:\", listainvertida)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AAM-i2PtWNhQ",
        "outputId": "b6780c88-66bc-4319-9d26-03e4390322ed"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el número de elementos: 6\n",
            "Ingrese el elemento 1: 1\n",
            "Ingrese el elemento 2: 2\n",
            "Ingrese el elemento 3: 3\n",
            "Ingrese el elemento 4: 4\n",
            "Ingrese el elemento 5: 5\n",
            "Ingrese el elemento 6: 6\n",
            "\n",
            "Lista invertida: ['6', '5', '4', '3', '2', '1']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def generar_fibonacci(cantidad):\n",
        "    fibonacci = [0, 1]\n",
        "\n",
        "    for i in range(2, cantidad):\n",
        "        fibonacci.append(fibonacci[i-1] + fibonacci[i-2])\n",
        "\n",
        "    return fibonacci\n",
        "\n",
        "def main():\n",
        "    try:\n",
        "        cantidad = int(input(\"Ingrese la cantidad de números de la serie de Fibonacci que desea generar: \"))\n",
        "\n",
        "        if cantidad <= 0:\n",
        "            print(\"Por favor, ingrese un número mayor que cero.\")\n",
        "        else:\n",
        "            serie_fibonacci = generar_fibonacci(cantidad)\n",
        "            print(f\"Serie de Fibonacci de los primeros {cantidad} números:\")\n",
        "            print(serie_fibonacci)\n",
        "    except ValueError:\n",
        "        print(\"Por favor, ingrese un número entero válido.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TJeYbJCBpBKq",
        "outputId": "cea0b9d7-fb78-4ae1-9adb-6734c3740b04"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de números de la serie de Fibonacci que desea generar: 10\n",
            "Serie de Fibonacci de los primeros 10 números:\n",
            "[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "def jugar_adivina_el_numero():\n",
        "    numero_objetivo = random.randint(1, 100)\n",
        "    intentos = 0\n",
        "\n",
        "    print(\"¡Bienvenido al juego de adivinar el número!\")\n",
        "    print(\"Estoy pensando en un número entre 1 y 100.\")\n",
        "\n",
        "    while True:\n",
        "        intento_usuario = int(input(\"Adivina el número: \"))\n",
        "        intentos += 1\n",
        "\n",
        "        if intento_usuario == numero_objetivo:\n",
        "            print(f\"¡Felicidades! Adivinaste el número en {intentos} intentos.\")\n",
        "            break\n",
        "        elif intento_usuario < numero_objetivo:\n",
        "            print(\"El número es mayor. Intenta de nuevo.\")\n",
        "        else:\n",
        "            print(\"El número es menor. Intenta de nuevo.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    jugar_adivina_el_numero()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o-jXcXhbpgNX",
        "outputId": "62f826f1-4395-4122-b9fb-5f7f3b62fa09"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "¡Bienvenido al juego de adivinar el número!\n",
            "Estoy pensando en un número entre 1 y 100.\n",
            "Adivina el número: 10\n",
            "El número es mayor. Intenta de nuevo.\n",
            "Adivina el número: 40\n",
            "El número es menor. Intenta de nuevo.\n",
            "Adivina el número: 20\n",
            "El número es menor. Intenta de nuevo.\n",
            "Adivina el número: 15\n",
            "El número es menor. Intenta de nuevo.\n",
            "Adivina el número: 13\n",
            "El número es menor. Intenta de nuevo.\n",
            "Adivina el número: 12\n",
            "El número es menor. Intenta de nuevo.\n",
            "Adivina el número: 11\n",
            "¡Felicidades! Adivinaste el número en 7 intentos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def es_primo(numero):\n",
        "    if numero < 2:\n",
        "        return False\n",
        "    for i in range(2, int(numero**0.5) + 1):\n",
        "        if numero % i == 0:\n",
        "            return False\n",
        "    return True\n",
        "\n",
        "def numeros_primos_en_rango(inicio, fin):\n",
        "    primos = []\n",
        "    for num in range(inicio, fin + 1):\n",
        "        if es_primo(num):\n",
        "            primos.append(num)\n",
        "    return primos\n",
        "\n",
        "def main():\n",
        "    try:\n",
        "        inicio = int(input(\"Ingrese el inicio del rango: \"))\n",
        "        fin = int(input(\"Ingrese el fin del rango: \"))\n",
        "\n",
        "        if inicio < 0 or fin < 0 or inicio > fin:\n",
        "            print(\"Por favor, ingrese un rango válido.\")\n",
        "        else:\n",
        "            primos_en_rango = numeros_primos_en_rango(inicio, fin)\n",
        "            print(f\"Números primos en el rango de {inicio} a {fin}:\")\n",
        "            print(primos_en_rango)\n",
        "    except ValueError:\n",
        "        print(\"Por favor, ingrese números enteros válidos.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r0gNe_d4p2T0",
        "outputId": "98a5af51-de7c-48bf-e634-49c50772f54c"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el inicio del rango: 2\n",
            "Ingrese el fin del rango: 10\n",
            "Números primos en el rango de 2 a 10:\n",
            "[2, 3, 5, 7]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def suma(a, b):\n",
        "    return a + b\n",
        "\n",
        "def resta(a, b):\n",
        "    return a - b\n",
        "\n",
        "def multiplicacion(a, b):\n",
        "    return a * b\n",
        "\n",
        "def division(a, b):\n",
        "    if b != 0:\n",
        "        return a / b\n",
        "    else:\n",
        "        return \"Error: No se puede dividir entre cero.\"\n",
        "\n",
        "def main():\n",
        "    try:\n",
        "        num1 = float(input(\"Ingrese el primer número: \"))\n",
        "        num2 = float(input(\"Ingrese el segundo número: \"))\n",
        "\n",
        "        print(\"Operaciones disponibles:\")\n",
        "        print(\"1. Suma\")\n",
        "        print(\"2. Resta\")\n",
        "        print(\"3. Multiplicación\")\n",
        "        print(\"4. División\")\n",
        "\n",
        "        opcion = int(input(\"Seleccione una operación (1-4): \"))\n",
        "\n",
        "        if opcion < 1 or opcion > 4:\n",
        "            print(\"Por favor, seleccione una operación válida.\")\n",
        "        else:\n",
        "            if opcion == 1:\n",
        "                resultado = suma(num1, num2)\n",
        "                operacion = \"suma\"\n",
        "            elif opcion == 2:\n",
        "                resultado = resta(num1, num2)\n",
        "                operacion = \"resta\"\n",
        "            elif opcion == 3:\n",
        "                resultado = multiplicacion(num1, num2)\n",
        "                operacion = \"multiplicación\"\n",
        "            elif opcion == 4:\n",
        "                resultado = division(num1, num2)\n",
        "                operacion = \"división\"\n",
        "\n",
        "            print(f\"El resultado de la {operacion} es: {resultado}\")\n",
        "\n",
        "    except ValueError:\n",
        "        print(\"Por favor, ingrese números válidos.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8R8owYTjqMv7",
        "outputId": "bc82b151-3ff6-4f41-c69b-3b7c0d9097f5"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el primer número: 5.5\n",
            "Ingrese el segundo número: 2\n",
            "Operaciones disponibles:\n",
            "1. Suma\n",
            "2. Resta\n",
            "3. Multiplicación\n",
            "4. División\n",
            "Seleccione una operación (1-4): 3\n",
            "El resultado de la multiplicación es: 11.0\n"
          ]
        }
      ]
    }
  ]
}